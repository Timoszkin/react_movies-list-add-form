{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","inputs","isSubmited","isValidUrl","validateForm","setState","pattern","RegExp","every","el","i","length","test","this","id","onSubmit","event","preventDefault","props","addMovie","form","document","querySelector","reset","type","name","placeholder","onChange","target","prev","newAr","value","hidden","trim","Component","App","moviesFromServer","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb478b8d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\ntype Props = {\n  addMovie: (title: string, description: string, imgUrl:\n  string, imdbUrl: string, imdbId: string) => void;\n};\n\ntype State = {\n  inputs: string[],\n  isSubmited: boolean,\n  isValidUrl: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    inputs: ['', '', '', '', ''],\n    isSubmited: false,\n    isValidUrl: true,\n  };\n\n  validateForm = () => {\n    const { inputs } = this.state;\n\n    this.setState({\n      isSubmited: true,\n    });\n\n    const pattern = new RegExp('^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$', 'i');\n\n    // check is every field except description is filled\n\n    if (inputs.every((el, i) => i === 1 || el.length > 0)) {\n      // check for valid URL\n\n      if (!pattern.test(inputs[2]) || !pattern.test(inputs[3])) {\n        this.setState({ isValidUrl: false });\n\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  render() {\n    const { inputs, isSubmited, isValidUrl } = this.state;\n\n    const items = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\n\n    return (\n      <form\n        id=\"addMovieForm\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (this.validateForm()) {\n            this.props.addMovie(inputs[0], inputs[1], inputs[2], inputs[3], inputs[4]);\n\n            this.setState({ isSubmited: false });\n            const form: HTMLFormElement | null = document.querySelector('#addMovieForm');\n\n            if (form) {\n              form.reset();\n            }\n          }\n        }}\n      >\n        {items.map((el, i) => (\n          <>\n            <input\n              className=\"movie__input\"\n              type=\"text\"\n              name={el}\n              placeholder={`Enter ${el}`}\n              onChange={({ target }) => {\n                this.setState(prev => {\n                  const newAr = prev.inputs;\n\n                  newAr[i] = target.value;\n\n                  return { inputs: newAr, isSubmited: false, isValidUrl: true };\n                });\n              }}\n            />\n            <div\n              className=\"warning\"\n              hidden={i === 1 ? true\n                : !(inputs[i].trim().length < 1 && isSubmited)}\n            >\n              Please enter&nbsp;\n              {el}\n            </div>\n          </>\n        ))}\n        <div\n          className=\"warning\"\n          hidden={isValidUrl}\n        >\n          Image link and IMDB link should be valid URL addresses!\n        </div>\n        <button\n          type=\"submit\"\n        >\n          Add a new movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title: string, description: string, imgUrl: string,\n    imdbUrl: string, imdbId: string) => {\n    this.setState((prev) => {\n      return {\n        movies: [...prev.movies, {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        }],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}