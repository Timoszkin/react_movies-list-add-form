{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","validateForm","Object","values","every","el","i","length","items","keys","this","onSubmit","event","preventDefault","props","addMovie","required","type","name","placeholder","onChange","target","setState","value","hidden","trim","Component","App","moviesFromServer","prev","React","ReactDOM","render","document","getElementById"],"mappings":"gxEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,OCGfC,EAAb,4MACEC,MAAe,CACbd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,aAAe,WACb,QAAIC,OAAOC,OAAO,EAAKH,OAAOI,OAAM,SAACC,EAAIC,GAAL,OAAiB,IAANA,GAAWD,EAAGE,OAAS,MAV1E,4CAiBE,WAAU,IAAD,OACDC,EAAQN,OAAOO,KAAKC,KAAKV,OAE/B,OACE,uBAAMW,SAAU,SAACC,GAEf,GADAA,EAAMC,iBACF,EAAKZ,eAAgB,CACvB,MAMI,EAAKD,MALPd,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGF,EAAKgB,MAAMC,SAAS7B,EAAOC,EAAaC,EAAQC,EAASS,KAX7D,UAeGU,EAAMZ,KAAI,SAAAS,GAAE,OACX,qCACE,uBACEW,SAAiB,gBAAPX,EACVf,UAAU,eACV2B,KAAK,OACLC,KAAMb,EACNc,YAAW,gBAAWd,GACtBe,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKC,SAAL,eACGD,EAAOH,KAAOG,EAAOE,WAI5B,sBACEjC,UAAU,UACVkC,OAAe,gBAAPnB,KACF,EAAKL,MAAMK,GAAmBoB,OAAOlB,OAAS,GAHtD,6BAMGF,WAKP,wBAAQY,KAAK,SAAb,oCA7DR,GAA8BS,a,QCLjBC,EAAb,4MACE3B,MAAe,CACbL,OAAQiC,GAFZ,EAKEb,SAAW,SAAC7B,EAAeC,EAAqBC,EAC9CC,EAAiBS,GACjB,EAAKwB,UAAS,SAACO,GACb,MAAO,CACLlC,OAAO,GAAD,mBAAMkC,EAAKlC,QAAX,CAAmB,CACvBT,QACAC,cACAC,SACAC,UACAS,iBAdV,4CAoBE,WACE,IAAQH,EAAWe,KAAKV,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUyB,SAAUL,KAAKK,oBA7BnC,GAAyBe,IAAMJ,WCN/BK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d0b6f6d2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\ntype Props = {\n  addMovie: (title: string, description: string, imgUrl:\n  string, imdbUrl: string, imdbId: string) => void;\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  validateForm = () => {\n    if (Object.values(this.state).every((el, i) => i === 1 || el.length > 0)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  render() {\n    const items = Object.keys(this.state);\n\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n          const {\n            title,\n            description,\n            imgUrl,\n            imdbUrl,\n            imdbId,\n          } = this.state;\n\n          this.props.addMovie(title, description, imgUrl, imdbUrl, imdbId);\n        }\n      }}\n      >\n        {items.map(el => (\n          <>\n            <input\n              required={el !== 'description'}\n              className=\"movie__input\"\n              type=\"text\"\n              name={el}\n              placeholder={`Enter ${el}`}\n              onChange={({ target }) => {\n                this.setState({\n                  [target.name]: target.value,\n                } as Pick<State, keyof State>);\n              }}\n            />\n            <div\n              className=\"warning\"\n              hidden={el === 'description' ? true\n                : !(this.state[el as keyof State].trim().length < 1)}\n            >\n              Please enter&nbsp;\n              {el}\n            </div>\n          </>\n        ))}\n\n        <button type=\"submit\">\n          Add a new movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title: string, description: string, imgUrl: string,\n    imdbUrl: string, imdbId: string) => {\n    this.setState((prev) => {\n      return {\n        movies: [...prev.movies, {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId,\n        }],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}